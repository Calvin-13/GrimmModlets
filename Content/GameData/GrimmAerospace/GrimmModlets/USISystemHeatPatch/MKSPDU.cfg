// better MKS / NFE / SystemHeat compatibility (current one provided by NFT suite a bit broken as of early 2023)
//
// author: Grimmas
//



 // remove stale USI converter modules not removed by NFE patch
@PART[Duna_PDU,Tundra_PDU,Tundra_PDU_375]:NEEDS[KolonyTools,NearFutureElectrical]
{
    !MODULE[USI_Converter]{}

}

// less insane heat generation for Duna and Tundra PDU

@PART[Duna_PDU]:NEEDS[KolonyTools,NearFutureElectrical]:AFTER[SystemHeatFissionReactors]
{
    @MODULE[ModuleSystemHeatFissionReactor]
    {
        !HeatGeneration {}
        HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 1800 0 0 
		}
    }
}


@PART[Tundra_PDU]:NEEDS[KolonyTools,NearFutureElectrical]:AFTER[SystemHeatFissionReactors]
{
    @MODULE[ModuleSystemHeatFissionReactor]
    {
        !HeatGeneration {}
        HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 2800 0 0 
		}
    }
}


// add missing SystemHeat support for the bigger Tundra PDU
@PART[Tundra_PDU_375]:NEEDS[KolonyTools,NearFutureElectrical]:AFTER[SystemHeatFissionReactors]
{
	MODULE
	{
		name = ModuleSystemHeat
		volume = 4
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 8050 0 0 
		} 
		
		// Above this temp, risky
		NominalTemperature = 900
		
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.005

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 10

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 4050
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.00000652
			FlowMode = NO_FLOW
		}
		
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00000652
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}